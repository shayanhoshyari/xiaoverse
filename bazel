#!/usr/bin/env bash

set -euo pipefail

BAZELISK_VERSION="v1.25.0"
PLATFORM="$(uname -ms)"

download_tool() {
  local os="$1"
  local arch="$2"
  local out_file="$3"

  if [[ "$arch" == x86_64 ]]; then
    arch=amd64
  fi

  if ! command -v curl >/dev/null; then
    echo "curl is required to download bazel/bazelisk." >&2
    exit 1
  fi

  curl -L -o "$out_file" --progress-bar \
    "https://github.com/bazelbuild/bazelisk/releases/download/$BAZELISK_VERSION/bazelisk-$os-$arch"
}

install_and_run_tool() {
  # expects
  # - $1 to be the tool name and
  # - $2 to be the version of the tool
  # - `download_tool` to be a function that receives os, cpu arch, and download path
  # - the rest of the arguments to be the command line arguments to the tool

  local tool_name="$1"
  local tool_version="$2"
  shift 2

  local os
  local arch


  case "$PLATFORM" in
    "Darwin arm64") os=darwin; arch=arm64 ;;
    "Darwin x86_64") os=darwin arch=x86_64 ;;
    "Linux aarch64"|"Linux arm64") os=linux arch=arm64 ;;
    "Linux x86_64") os=linux arch=x86_64 ;;
    *) echo "Unsupported platform: $PLATFORM" && exit 255 ;;
  esac

  local this_dir
  local cache_dir
  this_dir="$(dirname "${BASH_SOURCE[0]}")"
  cache_dir="$(cd "$this_dir" && pwd)/.bazel-bin"

  local tool_cache_dir="${cache_dir}/${tool_name}/${tool_version}-${os}-${arch}"
  local tool_executable="${tool_cache_dir}/${tool_name}"

  mkdir -p "${tool_cache_dir%/*}"
  if mkdir "${tool_cache_dir}" 2>/dev/null; then
    # directory does not exist yet, download the tool
    echo "Downloading ${tool_name}..." >&2
    local tmp_file

    # Some macos versions do not support -p
    # tmp_file="$(mktemp -d -p "${tool_cache_dir}")/${tool_name}"
    tmp_file="$(mktemp -d)/${tool_name}"

    if download_tool "$os" "$arch" "${tmp_file}"; then
      chmod +x "${tmp_file}"
      mv "${tmp_file}" "${tool_executable}"
      rm -rf "${tmp_file%/*}"
    else
      rm -rf "${tool_cache_dir}"
      echo "Failed to download ${tool_name}" >&2
      exit 255
    fi
  else
    # somebody else is downloading the tool
    while [ ! -e "${tool_executable}" ]; do

      if [ ! -d "${tool_cache_dir}" ]; then
        # the other download failed
        echo "Failed to download ${tool_name}" >&2
        exit 255
      fi

      echo "Waiting for ${tool_name} to download..." >&2
      sleep 1
    done
  fi

  exec "${tool_executable}" "$@"
}

if [[ "${CI:-}" == "1" ]]; then
    # Code to run in CI environment
    bazel "$@"
else
    # Code to run in non-CI environment
    install_and_run_tool bazelisk "$BAZELISK_VERSION" "$@"
fi
