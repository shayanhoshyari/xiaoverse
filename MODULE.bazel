"""
rules_ai_ethos is meant to be the bazel rules used in the colligo-deploy
The reason they are a separate module is that maybe we can move them to colligo sooner.
"""

module(name = "rules_ai_ethos")

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_multitool", version = "1.0.0")
bazel_dep(name = "rules_python", version = "1.0.0")
bazel_dep(name = "rules_uv", version = "0.45.0")
bazel_dep(name = "rules_go", version = "0.51.0-rc2")
bazel_dep(name = "gazelle", version = "0.40.0")

bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True)

# ==== tools =====

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//:multitool.lock.json")
use_repo(multitool, "multitool")

# ==== Python ====

# Toolchain - i.e. select the version
PYTHON_VERSION = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = PYTHON_VERSION,
)

# pip deps - if you update them, you need to run
# bazel run //:requirements.update
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    # We need to use the same version here as in the `python.toolchain` call.
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements.lock.txt",
)
use_repo(pip, "pypi")

# ==== Go ====

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    name = "go_sdk",
    version = "1.23.3",
)
use_repo(go_sdk, "go_sdk")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_go_delve_delve", "org_golang_x_tools_gopls")
